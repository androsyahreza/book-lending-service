{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0", 
    "title": "Book Lending Service",
    "description": "The Book Lending Service is a application API that lets members borrow and return books from a library. It provides endpoints to show book information, member information, and do borrowing-returning transactions.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "paths": {
    "/members": {
      "get": {
        "tags": ["Members"],
        "summary": "Get all members",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Members"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "tags": ["Members"],
        "summary": "Add new members",
        "description": "Add new member",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters" : [ {
          "name": "input",
          "in": "body",
          "description": "Name of member that we want to add, the type must be string.",
          "schema": {
            "$ref": "#/definitions/AddMember"
        }
      }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddMemberResponse"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }, 
    "/books" : {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Books"],
        "summary": "Add new book",
        "description": "Add new book",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters" : [ {
          "name": "input",
          "in": "body",
          "description": "Parameter of book that we want to add, the code must be alphabet before hypen and after hypen must be number. example (JK-45)",
          "schema": {
            "$ref": "#/definitions/AddBook"
        }
      }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddBookResponse"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }, 
    "/borrow" : {
      "post": {
        "tags": ["Borrow"],
        "summary": "Borrow a book",
        "description": "Borrow a book",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters" : [ {
          "name": "input",
          "in": "body",
          "description": "Parameter of borow, the book_code must be alphabet before hypen and after hypen must be number, example (JK-45). The borrow_date format must be (YYYY-MM-DD)",
          "schema": {
            "$ref": "#/definitions/Borrow"
        }
      }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BorrowResponse"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/return" : {
      "post": {
        "tags": ["Return"],
        "summary": "Return a book",
        "description": "Return a book",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters" : [ {
          "name": "input",
          "in": "body",
          "description": "Parameter of return, the book_code must be alphabet before hypen and after hypen must be number, example (JK-45). The return_date format must be (YYYY-MM-DD)",
          "schema": {
            "$ref": "#/definitions/Return"
        }
      }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReturnResponse"
            }
          },
          "400": {
            "description": "BAD_REQUEST",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "500": {
            "description": "INTERNAL_SERVER_ERROR",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Members": {
      "required": ["code", "name"],
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "total_borrowed": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "AddMemberResponse": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              }
            }
        }
      }
    },
    "AddBookResponse": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "stock": {
                "type": "integer"
              },
              "updatedAt": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              }
            }
        }
      }
    },
    "BorrowResponse" : {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
            "properties": {
              "member_code": {
                "type": "string"
              },
              "book_code": {
                "type": "string"
              },
              "borrow_date": {
                "type": "string"
              },
              "expected_return_date": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "return_date" : {
                "type": "string"
              }
            }
        }
      }
    },
    "ReturnResponse" : {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "AddMember": {
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "AddBook": {
      "properties": {
        "code": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "stock": {
          "type": "integer"
        }
      }
    },
    "Books": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "stock": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "Borrow" : {
      "properties": {
        "member_code": {
          "type": "string"
        },
        "book_code": {
          "type": "string"
        },
        "borrow_date": {
          "type": "string"
        }
      }
    },
    "Return" : {
      "properties": {
        "member_code": {
          "type": "string"
        },
        "book_code": {
          "type": "string"
        },
        "return_date": {
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "BadRequest": {
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    }
  },
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"]
}